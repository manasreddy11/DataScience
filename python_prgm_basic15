Question 1:
Please write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.
Example:
If the following n is given as input to the program:
100
Then, the output of the program should be:
0,35,70
1.Answer: def generator(x):
    for i in range(x+1):
        if i%5==0 and i%7==0:
            yield i
for j in generator(100):
    print(j,end=',')


Question 2:
Please write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console.
Example:
If the following n is given as input to the program:
10
Then, the output of the program should be:
0,2,4,6,8,10
2.Answer: def generator(x):
    for i in range(x+1):
        if i%2==0:
            yield i
for j in generator(10):
    print(j,end =",")


Question 3:
The Fibonacci Sequence is computed based on the following formula:
f(n)=0 if n=0
f(n)=1 if n=1
f(n)=f(n-1)+f(n-2) if n>1
Please write a program using list comprehension to print the Fibonacci Sequence in comma separated form with a given n input by console.
Example:
If the following n is given as input to the program:
7

Then, the output of the program should be:
0,1,1,2,3,5,8,13
3.Answer: def fib(a):
    if n==0:
        return 0
    elif n==1:
        return 1
    else:
        return fib(a-1) + fib(a-2)
    
a = int(input("Enter length a: "))
sequence = [str(fib(i)) for i in range(a)]
print(",".join(sequence))


Question 4:
Assuming that we have some email addresses in the "username@companyname.com" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.
Example:
If the following email address is given as input to the program:
john@google.com
Then, the output of the program should be:
John
def username(email):
    print(email.split("@")[0])
username("john@google.com")



Question 5:
Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.
class shape:
    def __init__(self):
        pass
    def area(self):
        return 0
class square(shape):
    def __init__(self,length = 0):
        shape.__init__(self)
        self.length = length
    
    def area(self):
        return self.length*self.length
a = square(10)
a.area()

square().area()


