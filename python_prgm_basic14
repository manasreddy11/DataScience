Question 1:

Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.
1.Answer: class itrate:
    def __init__(self,a):
        self.a  = a
    
    def divisible(self):
        for i in range(0, self.a):
            if i%7==0 and i>0:
                print(i)


Question 2:
Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically. 

Suppose the following input is supplied to the program:

New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3.

Then, the output should be:

2:2

3.:1

3?:1

New:1

Python:5

Read:1

and:1

between:1

choosing:1

or:2

to:1
2.Answer: input_string = str(input("Enter the string: ")).split()
frequency_check = sorted(set(input_string))

for i in frequency_check:
    print("{}:{}".format(i,input_string.count(i)))


Question 3:



Define a class Person and its two child classes: Male and Female. All classes have a method "getGender" which can print "Male" for Male class and "Female" for Female class.
3. Answer: class person:
    def getgender(self):
        pass

class male(person):
    def getgender(self):
        return "male"

class female(person):
    def getgender(self):
        return "female"
    
m = male()
print(m.getgender())
f = female()
print(f.getgender())


Question 4:
Please write a program to generate all sentences where subject is in ["I", "You"] and verb is in ["Play", "Love"] and the object is in ["Hockey","Football"].
Answer: subject = ["I", "You"]
verb = ["Play", "Love"]
objects = ["Hockey","Football"]

for i in subject:
    for j in verb:
        for k in objects:
            print("{} {} {}".format(i,j,k))



Question 5:
Please write a program to compress and decompress the string "hello world!hello world!hello world!hello world!".
5. Answer: import zlib
string = 'hello world!hello world!hello world!hello world!'.encode()
com = zlib.compress(s)
print(t)
print(zlib.decompress(t))


Question 6:
Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.
6.Answer: def binary_search(l,x):
    low = 0
    high = len(l)-1

    
    while low<=high:
        mid = (low+high)//2
        
        if l[mid]<x:
            low = mid+1
        elif l[mid]>x:
            high = mid-1
        else:
            return mid
    return "element not in list"
l = [12,4,2,31,21]
l.sort()
print(l)
binary_search(l,2)


